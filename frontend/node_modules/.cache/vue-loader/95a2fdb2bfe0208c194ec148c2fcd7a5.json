{"remainingRequest":"/data/xbonline/xbops/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/xbonline/xbops/src/components/tasklist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/data/xbonline/xbops/src/components/tasklist.vue","mtime":1597213655391},{"path":"/data/xbonline/xbops/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/xbonline/xbops/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/data/xbonline/xbops/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/xbonline/xbops/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB0YWdjb20gZnJvbSAnLi90YWdjb20nOwppbXBvcnQgYnV0dG9uY29tIGZyb20gJy4vYnV0dG9uY29tJwppbXBvcnQgcmVxd2VzdCBmcm9tICdyZXF3ZXN0JzsKaW1wb3J0IGluZmluaXRlU2Nyb2xsIGZyb20gJ3Z1ZS1pbmZpbml0ZS1zY3JvbGwnOwpjb25zdCBmYWtlRGF0YVVybCA9ICdodHRwOi8vMTkyLjE2OC4wLjI5OjUzNTAvc2VsZWN0dGFzayc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWydjdXJyZW50c3RhdHVzJywgJ2RhdGEnXSwKICBjb21wb25lbnRzOiB7IHRhZ2NvbSwgYnV0dG9uY29tIH0sCiAgZGlyZWN0aXZlczogeyBpbmZpbml0ZVNjcm9sbCB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIGJ1c3k6IGZhbHNlLAogICAgfTsKICB9LAogIGNyZWF0ZWQgKCkgewogICAgdGhpcy5mZXRjaERhdGEocmVzID0+IHsKICAgICAgY29uc29sZS5sb2cocmVzKQogICAgICB0aGlzLiRlbWl0KCd1cGRhdGVEYXRhJywgcmVzLnJlc3VsdHMpCiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoRGF0YSAoY2FsbGJhY2spIHsKICAgICAgcmVxd2VzdCh7CiAgICAgICAgdXJsOiBmYWtlRGF0YVVybCwKICAgICAgICB0eXBlOiAnanNvbicsCiAgICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgICBkYXRhOiB7IHN0YXR1czogdGhpcy5jdXJyZW50c3RhdHVzIH0sCiAgICAgICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICBzdWNjZXNzOiByZXMgPT4gewogICAgICAgICAgY2FsbGJhY2socmVzKTsKICAgICAgICB9LAogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVJbmZpbml0ZU9uTG9hZCAoKSB7CiAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLmRhdGE7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMsIGRhdGEpCgogICAgICBpZiAoZGF0YS5sZW5naXRoID49IDEwKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCdJbmZpbml0ZSBMaXN0IGxvYWRlZCBhbGwnKTsKICAgICAgICB0aGlzLmJ1c3kgPSB0cnVlOwogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB0aGlzLmZldGNoRGF0YShyZXMgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHJlcykKICAgICAgICAvLyB0aGlzLmRhdGEgPSBkYXRhLmNvbmNhdChyZXMucmVzdWx0cyk7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZVRhc2sgKHJlc2RhdGEpIHsKICAgICAgdGhpcy5kYXRhID0gcmVzZGF0YQogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["tasklist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tasklist.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div\n    class=\"demo-infinite-container\"\n    :infinite-scroll-disabled=\"busy\"\n    :infinite-scroll-distance=\"10\"\n  >\n    <a-list :data-source=\"data\">\n      <a-list-item\n        slot=\"renderItem\"\n        slot-scope=\"item\"\n        v-infinite-scroll=\"handleInfiniteOnLoad\"\n      >\n        <a-list-item-meta :description=\"item.notice\">\n          <a slot=\"title\">{{ item.name }}</a>\n          <a-avatar slot=\"avatar\" src=\"\" />\n        </a-list-item-meta>\n        <div>\n          <tagcom\n            v-if=\"item.level == 'level1'\"\n            :color=\"'#87d068'\"\n            :content=\"'小事'\"\n          ></tagcom>\n          <tagcom\n            v-else-if=\"item.level == 'level2'\"\n            :color=\"'#00FFFF'\"\n            :content=\"'正事'\"\n          ></tagcom>\n          <tagcom\n            v-else-if=\"item.level == 'level3'\"\n            :color=\"'#FF4500'\"\n            :content=\"'大事'\"\n          ></tagcom>\n        </div>\n        <div>\n          <tagcom :color=\"'#008c8c'\" :content=\"item.helper\"></tagcom>\n        </div>\n        <div>\n          <tagcom\n            :color=\"'#7FFF00'\"\n            :content=\"new Date(item.begintime * 1000).toLocaleString()\"\n          ></tagcom>\n        </div>\n        <div>\n          <tagcom\n            :color=\"'#CD2626'\"\n            :content=\"new Date(item.endtime * 1000).toLocaleString()\"\n          ></tagcom>\n        </div>\n        <div>\n          <buttoncom\n            v-if=\"currentstatus == 2\"\n            :taskID=\"item.id\"\n            :currentstatus=\"currentstatus\"\n            @updateTask=\"updateTask\"\n          ></buttoncom>\n        </div>\n      </a-list-item>\n      <div v-if=\"loading && !busy\" class=\"demo-loading-container\">\n        <a-spin />\n      </div>\n    </a-list>\n  </div>\n</template>\n<script>\nimport tagcom from './tagcom';\nimport buttoncom from './buttoncom'\nimport reqwest from 'reqwest';\nimport infiniteScroll from 'vue-infinite-scroll';\nconst fakeDataUrl = 'http://192.168.0.29:5350/selecttask';\nexport default {\n  props: ['currentstatus', 'data'],\n  components: { tagcom, buttoncom },\n  directives: { infiniteScroll },\n  data () {\n    return {\n      loading: false,\n      busy: false,\n    };\n  },\n  created () {\n    this.fetchData(res => {\n      console.log(res)\n      this.$emit('updateData', res.results)\n    });\n  },\n  methods: {\n    fetchData (callback) {\n      reqwest({\n        url: fakeDataUrl,\n        type: 'json',\n        method: 'get',\n        data: { status: this.currentstatus },\n        contentType: 'application/json',\n        success: res => {\n          callback(res);\n        },\n      });\n    },\n    handleInfiniteOnLoad () {\n      const data = this.data;\n      this.loading = true;\n      console.log(this, data)\n\n      if (data.lengith >= 10) {\n        this.$message.warning('Infinite List loaded all');\n        this.busy = true;\n        this.loading = false;\n        return;\n      }\n      this.fetchData(res => {\n        console.log(res)\n        // this.data = data.concat(res.results);\n        this.loading = false;\n      });\n    },\n    updateTask (resdata) {\n      this.data = resdata\n    }\n  },\n};\n</script>\n<style>\n.demo-infinite-container {\n  border: 1px solid #e8e8e8;\n  border-radius: 4px;\n  overflow: auto;\n  padding: 8px 24px;\n  height: 300px;\n}\n.demo-loading-container {\n  position: absolute;\n  bottom: 40px;\n  width: 100%;\n  text-align: center;\n}\n</style>"]}]}